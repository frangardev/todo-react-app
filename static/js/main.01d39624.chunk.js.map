{"version":3,"sources":["Components/TodoCounter/TodoCounter.js","Components/TodoSearch/TodoSearch.js","Components/TodoList/TodoList.js","Components/CreateTodoButton/CreateTodoButton.js","Components/TodoItem/TodoItem.js","Components/Modal/index.js","Components/TodoForm/TodoForm.js","App/AppUi.js","App/index.js","utils/Hook-localStorage.js","index.js"],"names":["TodoCounter","total","complete","porcentaje","Math","round","msg","className","TodoSearch","searchValue","setSearchValue","type","placeholder","value","onChange","event","target","TodoList","props","children","CreateTodoButton","openModal","setOpenModal","TodoItem","onClick","checkTodo","text","onDelete","class","Modal","ReactDom","createPortal","document","getElementById","TodoForm","addTodo","React","useState","newTodoValue","setNewTodoValue","onSubmit","preventDefault","autoFocus","required","onFocus","AppUi","totalTodos","todosComplete","searchedTodos","deleteTodo","orderTodos","Fragment","map","todo","App","itemName","initialValue","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","setItem","stringify","item","newItem","stringifiedItem","useLocalStorage","todos","setTodos","filter","length","todoText","toLowerCase","searchText","includes","todoIndex","findIndex","newTodos","splice","todoComplete","todoIncomplete","rta","push","ReactDOM","render"],"mappings":"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","file":"static/js/main.01d39624.chunk.js","sourcesContent":["import react from \"react\";\r\nimport { traverseTwoPhase } from \"react-dom/cjs/react-dom-test-utils.production.min\";\r\nimport './TodoCounter.css'\r\n\r\nfunction TodoCounter({total, complete}){\r\n    const porcentaje = Math.round(complete * 100 / total)\r\n    let msg = ''\r\n\r\n    if(porcentaje === 0){\r\n        (total <= 0)? msg = `Hola, agrega una nueva tareas. ` : msg = ` Tienes ${total} tareas por completar.`\r\n    }else if(porcentaje >= 1 && porcentaje < 50){\r\n        msg = `Haz completado ${complete} tareas de ${total}.`\r\n    }else if(porcentaje >= 50 && porcentaje < 75){\r\n        msg = `No te rindas, faltan ${total - complete} de ${total} tareas.`\r\n    }else if(porcentaje >= 75 && porcentaje < 100){\r\n        msg = (complete < 1) ? `Ya casi. Faltan ${total - complete} tareas.`: `Ya casi. Solo falta ${total - complete} tarea.`\r\n    }else if(porcentaje == 100){\r\n        msg = '¡Felicidades! Completaste todas tus tareas.'\r\n    }else{\r\n        msg = `Agrega una nueva tareas para comenzar. `\r\n    }\r\n\r\n    return(\r\n        <h2 className=\"todo__counter\">{msg}</h2>\r\n    )\r\n}\r\n\r\nexport {TodoCounter}\r\n\r\n","import React from \"react\";\r\nimport './TodoSearch.css'\r\n\r\nfunction TodoSearch({searchValue, setSearchValue}){\r\n\r\n    const onSearchValueChange = (event) =>{\r\n        setSearchValue(event.target.value)\r\n    }\r\n    return(\r\n        <div className=\"search__container\">\r\n         <input\r\n            className=\"search\" \r\n            type=\"text\" \r\n            placeholder=\"ToDo\" \r\n            value={searchValue}\r\n            onChange={onSearchValueChange}\r\n        ></input>\r\n         <button className=\"search__button\">\r\n             <i className=\" search__icon fas fa-search\"></i>\r\n        </button>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport {TodoSearch}","import react from \"react\";\r\nimport './TodoList.css'\r\n\r\nfunction TodoList(props){\r\n    return(     \r\n        <ul className=\"Todos__container\">\r\n            {props.children}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport {TodoList}","import react from \"react\";\r\nimport './CreateTodoButton.css'\r\n\r\nfunction CreateTodoButton({openModal, setOpenModal}){\r\n    const createToDo =()=>{\r\n        (openModal) ? setOpenModal(false) : setOpenModal (true)\r\n    }\r\n    return(\r\n        <button \r\n            className=\"addTask\"\r\n            className={`addTask ${openModal && 'closeAddTask'}`}\r\n            onClick={createToDo}\r\n        >\r\n            +\r\n        </button>\r\n\r\n    )\r\n}\r\n\r\nexport {CreateTodoButton}","import React from \"react\";\r\nimport './TodoItem.css'\r\n\r\nfunction TodoItem(props){\r\n    return(     \r\n        <li className={`todo__item ${props.complete && 'todo__item-complete'}`}>\r\n            <button \r\n                className=\"todo__item__complete-button\"\r\n                onClick={props.checkTodo}\r\n            >\r\n                {(props.complete) ? <i className=\"icon icon-check fas fa-check\"></i> : null}\r\n            </button>\r\n            <p className={`todo__item__text ${props.complete && 'todo__item-complete-p'}`}>\r\n                {props.text}\r\n            </p>\r\n            <span\r\n                className=\"todo__item__delete\"\r\n                onClick={props.onDelete}\r\n            >\r\n                <i class=\"fas fa-times\"></i>\r\n            </span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport {TodoItem}\r\n\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport './Modal.css'\r\n\r\nfunction Modal({children}){\r\n    return ReactDom.createPortal(\r\n        <div className=\"ModalBackground\">\r\n            {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n    )\r\n}\r\n\r\nexport {Modal}","import React from \"react\";\r\nimport './TodoForm.css'\r\n\r\nfunction TodoForm({addTodo, setOpenModal}){\r\n    const [newTodoValue, setNewTodoValue] = React.useState('')\r\n\r\n    const onChange =(event)=>{\r\n        setNewTodoValue(event.target.value)\r\n    }\r\n\r\n    //Cancelar Crear Todo\r\n    const onCancel = ()=>{\r\n        setOpenModal(false)\r\n    }\r\n    //Agregar el todo\r\n    const onSubmit =(event)=>{\r\n        //Por defecto submit recarga la página para evitar que haga esto usamos:\r\n        event.preventDefault()\r\n        addTodo(newTodoValue)\r\n        setOpenModal(false)\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={onSubmit} className=\"form\">\r\n            <label className=\"form__label\">Crear una nueva tarea</label>\r\n            <textarea \r\n                autoFocus\r\n                required\r\n                className=\"form__textarea\"\r\n                onFocus={true}\r\n                value={newTodoValue}\r\n                onChange={onChange}\r\n                placeholder=\"Agregar Tarea\"\r\n            />\r\n            {/* <div className=\"form__button__container\"> */}\r\n                <button\r\n                    className=\"form__button form__button-secondary\"\r\n                    type=\"button\"\r\n                    onClick={onCancel}\r\n                >\r\n                    Cancelar    \r\n                </button>\r\n                <button\r\n                    className=\"form__button form__button-primary\"\r\n                    type=\"submit\" //Es el tipo que envia el formulario\r\n                >\r\n                    Añadir\r\n                </button>\r\n            {/* </div> */}\r\n        </form>\r\n    )\r\n}\r\nexport {TodoForm}","import React from \"react\";\r\n\r\nimport {TodoCounter} from '../Components/TodoCounter/TodoCounter'\r\nimport {TodoSearch} from '../Components/TodoSearch/TodoSearch'\r\nimport {TodoList} from '../Components/TodoList/TodoList'\r\nimport {CreateTodoButton} from '../Components/CreateTodoButton/CreateTodoButton'\r\nimport {TodoItem} from '../Components/TodoItem/TodoItem'\r\nimport {Modal} from '../Components/Modal/index'\r\nimport { TodoForm } from \"../Components/TodoForm/TodoForm\";\r\n\r\n\r\nfunction AppUi({\r\n    totalTodos,\r\n    todosComplete,\r\n    searchValue,\r\n    setSearchValue,\r\n    searchedTodos,\r\n    checkTodo,\r\n    deleteTodo,\r\n    orderTodos,\r\n    openModal,\r\n    setOpenModal,\r\n    addTodo\r\n}) {\r\n    return (\r\n        <React.Fragment>\r\n            <h1 className=\"title\">ToDo React App</h1>\r\n            <TodoSearch \r\n            //Asi le pasamos el estdo\r\n            searchValue = {searchValue}\r\n            setSearchValue = {setSearchValue}\r\n            />\r\n\r\n            <TodoCounter \r\n                total = {totalTodos}\r\n                complete = {todosComplete}\r\n            />\r\n\r\n            <TodoList>\r\n            <h3 className=\"todo-list__title\"> <span><i className=\"fas fa-list-ul\"></i></span> TodoList</h3>\r\n                {orderTodos(searchedTodos).map(todo => (\r\n                <TodoItem \r\n                    key={todo.text} \r\n                    complete={todo.complete} \r\n                    text={todo.text}\r\n                    checkTodo={() => checkTodo(todo.text)}\r\n                    onDelete={() => deleteTodo(todo.text)}\r\n                />\r\n                ))}\r\n            </TodoList>\r\n\r\n            {openModal && (\r\n                <Modal>\r\n                    <TodoForm \r\n                        addTodo={addTodo}\r\n                        setOpenModal={setOpenModal}\r\n                    />\r\n                </Modal>\r\n            )}\r\n\r\n            <CreateTodoButton\r\n             setOpenModal={setOpenModal}\r\n             openModal={openModal}\r\n             />\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport {AppUi};\r\n","import React from \"react\";\nimport {AppUi} from './AppUi'\nimport {useLocalStorage} from '../utils/Hook-localStorage'\n\nfunction App() {\n  //Declaramos el estado de manera que todos los elementos de App puedan reaccionar al estado\n  const [todos, setTodos] = useLocalStorage('TODOS_V1', [])//Esto para que la aplicación reaccione a los todos \n  const [searchValue, setSearchValue] = React.useState('')\n  const [openModal, setOpenModal] = React.useState(false)\n\n  //Para saber cuantas tareas hemos completado\n  const todosComplete = todos.filter(item => item.complete).length\n  const totalTodos = todos.length\n\n  //Ordena los todo de \"Por completar\" a los que ya fuerón completados\n  const orderTodos = (todo) =>{\n    const todoComplete = todo.filter(item => item.complete)\n    const todoIncomplete = todo.filter(item => !item.complete)\n  \n    const rta = []\n    rta.push(...todoIncomplete, ...todoComplete)\n    return rta\n  }\n\n  //Buscador:\n  let searchedTodos = []\n\n  if (!searchValue >= 1) {\n    searchedTodos = todos \n  }else{\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase()\n      const searchText = searchValue.toLowerCase()\n\n      return todoText.includes(searchText)\n    })\n  }\n\n  //Funcionalidad:\n  //   Marcar o desmarcar una tarea\n  const checkTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text)\n    const newTodos = [...todos]\n    if(newTodos[todoIndex].complete === true){\n      newTodos[todoIndex].complete = false\n    }else{\n      newTodos[todoIndex].complete = true\n    }\n    setTodos(newTodos)\n  }\n\n  //Eliminar una tarea\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text)\n    const newTodos = [...todos]\n    newTodos.splice(todoIndex, 1)\n    setTodos(newTodos)\n  }\n\n  const addTodo = (text) => {\n    const newTodos = [...todos]\n    newTodos.push({\n      complete: false,\n      text,\n    })\n    setTodos(newTodos)\n  }\n\n  return (\n    <AppUi\n      totalTodos={totalTodos}\n      todosComplete={todosComplete}\n      searchValue={searchValue}\n      setSearchValue={setSearchValue}\n      searchedTodos={searchedTodos}\n      checkTodo={checkTodo}\n      deleteTodo={deleteTodo}\n      orderTodos={orderTodos}\n      openModal={openModal}\n      setOpenModal={setOpenModal}\n      addTodo={addTodo}\n    />\n  )\n}\n\nexport default App;\n","import React from \"react\";\r\n\r\n/**\r\n * Custom Hook Local Storage\r\n * @param {String} itemName name local storage \r\n * @param initialValue Type value initial\r\n * @returns array [item: Lo que guardo, saveItem(): La función para guardarlos]\r\n */\r\n function useLocalStorage(itemName, initialValue) {\r\n    const localStorageItem = localStorage.getItem(itemName);\r\n    let parsedItem;\r\n    \r\n    if (!localStorageItem) {\r\n      localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n      parsedItem = initialValue;\r\n    } else {\r\n      parsedItem = JSON.parse(localStorageItem);\r\n    }\r\n  \r\n    const [item, setItem] = React.useState(parsedItem);\r\n  \r\n    const saveItem = (newItem) => {\r\n      const stringifiedItem = JSON.stringify(newItem);\r\n      localStorage.setItem(itemName, stringifiedItem);\r\n      setItem(newItem);\r\n    };\r\n  \r\n    return [\r\n      item,\r\n      saveItem,\r\n    ];\r\n  }\r\n\r\n  export {useLocalStorage}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css'\nimport './index.css';\n\nimport App from './App/index';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}